{"version":3,"sources":["images/DS3.png","images/DS3NOBGBG.png","pages/LandingPage.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","divStyle","fontSize","textAlign","fontFamily","divStyle2","LandingPage","state","btnmsg","showLogo","handleShowLogo","newState","setState","console","log","hideLogo","hideLogo2","this","className","onMouseEnter","style","src","logo","alt","onMouseLeave","logo2","to","window","location","Component","HomePage","id","App","basename","process","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8IAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,yPCMrCC,EAAU,CACZC,SAAU,CACRC,SAAU,OACVC,UAAW,SACXC,WAAY,SAGdC,UAAW,CACTH,SAAU,OACVC,UAAW,WA+FFG,E,4MAtFXC,MAAQ,CACJC,OAAQ,UACRC,UAAU,G,EAGZC,eAAiB,WACb,IAAMC,EAAQ,eAAO,EAAKJ,OAC1BI,EAASF,UAAYE,EAASF,SAC9B,EAAKG,SAASD,GACdE,QAAQC,IAAI,gB,uDAGR,IAAD,OAEDC,EAAW,CACX,QAAW,QAETC,EAAY,CACd,QAAW,QAUf,OARUC,KAAKV,MAAME,WACbM,EAAW,CACT,QAAW,QAGjBC,EAAY,CAAE,QAAW,SAIzB,yBAAKE,UAAU,wBACX,yBAAKA,UAAU,eAEX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBAAkBC,aAAeF,KAAKP,eAAgBU,MAAOL,GAC5E,yBAAKG,UAAU,cAAcG,IAAKC,IAAMC,IAAI,YAQpD,yBAAKL,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBAAkBM,aAAeP,KAAKP,eAAgBU,MAAOJ,GAC5E,yBAAKE,UAAU,cAAcG,IAAKI,IAAOF,IAAI,YAKrD,6BACV,6BACA,6BACA,6BACA,6BACA,6BAEA,yBAAKL,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKE,MAAOpB,EAAOC,UACjB,wDAEF,6BAEA,yBAAKmB,MAAOpB,EAAOK,WACjB,oEAEF,+BAGJ,6BAGA,yBAAKa,UAAU,0BACb,4BAAQC,aAAc,kBAAM,EAAKP,SAAS,CAAEJ,OAAQ,gBAAiBgB,aAAc,kBAAM,EAAKZ,SAAS,CAAEJ,OAAQ,cAAeU,UAAU,sBAC1I,kBAAC,IAAD,CAAMQ,GAAG,YAAYR,UAAU,YAC/B,yBAAKA,UAA+B,cAApBS,OAAOC,SAA2B,sBAAwB,0BACvEX,KAAKV,MAAMC,iB,GAhFAqB,aCmBXC,E,uKAnCP,OACI,oCACA,yBAAKZ,UAAU,gBAEf,yBAAKA,UAAU,YAEX,yBAAKa,GAAG,UAAUb,UAAU,iBACxB,4BAAQa,GAAG,SAASb,UAAU,QAC1B,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,aAKZ,yBAAKa,GAAG,UAAUb,UAAU,iBACxB,4BAAQa,GAAG,SAASb,UAAU,QAC1B,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,gBAIZ,yBAAKa,GAAG,UAAUb,UAAU,iBACxB,4BAAQa,GAAG,SAASb,UAAU,QAC1B,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAd,qB,GA3BLW,a,MCiBRG,MAbf,WACE,OACE,yBAAKd,UAAU,OACf,kBAAC,IAAD,CAAQe,SAAYC,qCAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,YAAYC,UAAWP,QCD/BQ,QACW,cAA7BX,OAAOC,SAASW,UAEe,UAA7BZ,OAAOC,SAASW,UAEhBZ,OAAOC,SAASW,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxC,QAAQwC,MAAMA,EAAMC,c","file":"static/js/main.c15356a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DS3.6f69d94a.png\";","module.exports = __webpack_public_path__ + \"static/media/DS3NOBGBG.aee0f87f.png\";","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport logo from '../images/DS3.png';\nimport logo2 from '../images/DS3NOBGBG.png';\n\n\nconst styles = ({\n    divStyle: {\n      fontSize: '25px',\n      textAlign: \"center\",\n      fontFamily: 'arial',\n    },\n  \n    divStyle2: {\n      fontSize: '20px',\n      textAlign: \"center\"\n    },\n  \n  });\n\n\n\nclass LandingPage extends Component {\n\n    state = {\n        btnmsg: \"Welcome\",\n        showLogo: true,\n      }\n\n      handleShowLogo = () => {\n          const newState = {...this.state}\n          newState.showLogo = !newState.showLogo\n          this.setState(newState);\n          console.log(\"mouse enter\")\n      };\n\n    render() {\n\n        let hideLogo = {\n            'display': \"flex\" \n          };\n          let hideLogo2 = {\n            'display': \"none\" \n          };\n              if(!this.state.showLogo) {\n                hideLogo = { \n                  'display': \"none\"\n               };\n                \n            hideLogo2 = { 'display': \"flex\" };\n              }\n\n        return (\n            <div className=\"landingPageContainer\">\n                <div className=\"lanpagewrap\">\n                    {/* LOGO START */}\n                    <div className=\"logocont\">\n                        <div className=\"logocirclewrap1\">\n                            <div className=\"logocirclewrap2\" onMouseEnter= {this.handleShowLogo} style={hideLogo} >\n                            <img className=\"logoimghome\" src={logo} alt=\"logo\" />\n                            \n                            </div>\n                        </div>\n                    </div>\n                    {/* LOGO ENDS */}\n\n                    {/* LOGO START */}\n                    <div className=\"logocont\">\n                        <div className=\"logocirclewrap1\">\n                            <div className=\"logocirclewrap3\" onMouseLeave= {this.handleShowLogo} style={hideLogo2} >\n                            <img className=\"logoimghome\" src={logo2} alt=\"logo\" />\n                            </div>\n                        </div>\n                    </div>\n                    {/* LOGO ENDS */}\n                    <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          {/* APP DESCRIPTION STARTS */}\n          <div className=\"descwrap1\">\n            <div className=\"descwrap2\">\n              <div style={styles.divStyle}>\n                <p>Looking for Web Designs?</p>\n              </div>\n              <br></br>\n              \n              <div style={styles.divStyle2}>\n                <p>Sarmiento Dev | Design | Development</p>\n              </div>\n              <br></br>\n            </div>\n          </div>\n          <br></br>\n          {/* APP DESCRIPTION ENDS */}\n\n          <div className=\"loginsignupbtnhomewrap\">\n            <button onMouseEnter={() => this.setState({ btnmsg: \"Go Inside!\" })} onMouseLeave={() => this.setState({ btnmsg: 'Welcome!' })} className=\"loginsignupbtnhome\">\n            <Link to=\"/HomePage\" className=\"linkLand\">\n            <div className={window.location === \"/HomePage\" ? \"landpagediv landnow\" : \"landpagediv landnotnow\"}>\n              {this.state.btnmsg}</div></Link></button>\n          </div>\n\n                </div>\n            </div>\n        )\n    };\n}\nexport default LandingPage","import React, {Component} from 'react';\n\n\nclass HomePage extends Component {\n\n    render() {\n        return (\n            <>\n            <div className=\"mainpagewrap\">\n\n            <div className=\".circles\">  \n\n                <div id=\"circle1\" className=\"three-circles\">\n                    <button id=\"btnid1\" className=\"btn1\">\n                        <div className=\"me-circle\">\n                            <h1 className=\"front-names\">Dennis</h1>\n                        </div>\n                    </button>\n                </div>\n\n                <div id=\"circle1\" className=\"three-circles\">\n                    <button id=\"btnid1\" className=\"btn1\">\n                        <div className=\"me-circle\">\n                            <h1 className=\"front-names\">Portfolio</h1>\n                        </div>\n                    </button>\n                </div>\n                <div id=\"circle1\" className=\"three-circles\">\n                    <button id=\"btnid1\" className=\"btn1\">\n                        <div className=\"me-circle\">\n                            <h1 className=\"front-names\">Contact</h1>\n                        </div>\n                    </button>\n                </div>\n            </div>\n            </div>\n\n            </>\n        )\n    };\n}\nexport default HomePage","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\"\nimport HomePage from \"./pages/HomePage\"\n// import logo from './logo.svg'; //from original file\nimport './App.css'; //from original file\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router basename = {process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/HomePage\" component={HomePage} />\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}